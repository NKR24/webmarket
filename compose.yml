version: '3.8'

services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend
  
      
  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - backend
  
      
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - backend

  elasticsearch:
    image: elasticsearch:7.17.24
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    networks:
      - backend

  migrations:
    image: migrate/migrate
    command: [
      "-path", "/migrations", 
      "-database", "postgres://postgres:example@postgres:5432/shop?sslmode=disable", 
      "up" ]
    volumes:
      - ./db/migrations:/migrations
    depends_on:
      - postgres
    networks:
      - backend

  api:
    build: .
    depends_on:
      - postgres
      - kafka
      - migrations
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - KAFKA_BROKERS=kafka:9092
      - ELASTIC_HOST=http://elasticsearch:9200
    ports:
      - "8080:8080"
    networks:
      - backend

volumes:
  pgdata:

networks:
  backend:
